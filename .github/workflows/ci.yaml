name: Build & Test

on: [push, pull_request]

jobs:
  test:
    name: Build & Test Go Package
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint

      - name: Build
        run: go build -v ./...

      - name: Test With Coverage
        run: go test ./... -race -coverprofile=coverage -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage

      - name: Run Vet & Lint
        run: |
          go vet ./...
          golint -set_exit_status=1 .

  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate build version
        id: prep
        run: |
          version=$(cat VERSION)
          echo "::set-output name=BUILD_VERSION::${version}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_VERSION }}