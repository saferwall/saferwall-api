{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Interact with Saferwall Malware Analysis Platform",
        "title": "Saferwall Web API",
        "termsOfService": "https://about.saferwall.com/tos",
        "contact": {
            "name": "API Support",
            "url": "https://about.saferwall.com/contact.html",
            "email": "support@saferwall.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.saferwall.com",
    "basePath": "/v1",
    "paths": {
        "/auth/login/": {
            "post": {
                "description": "Users logins by username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in",
                "parameters": [
                    {
                        "description": "Username and password",
                        "name": "auth-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"value\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout/": {
            "delete": {
                "description": "Delete the cookie used for authentication.",
                "tags": [
                    "auth"
                ],
                "summary": "Log out from current session",
                "responses": {
                    "204": {
                        "description": "logout success"
                    }
                }
            }
        },
        "/auth/password/": {
            "post": {
                "description": "Update the password from the auth token received in email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new password from a token received in email",
                "parameters": [
                    {
                        "description": "Email used during account sign-up",
                        "name": "reset-pwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.resetPwdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"value\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password/": {
            "post": {
                "description": "Request a reset password for anonymous users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset password for non-logged users by email",
                "parameters": [
                    {
                        "description": "Email used during account sign-up",
                        "name": "reset-pwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.resetPwdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"value\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify-account/": {
            "get": {
                "description": "Verify the JWT token received during account creation.",
                "tags": [
                    "auth"
                ],
                "summary": "Confirm a new account creation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GUID to identify the token",
                        "name": "guid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token generated for account creation",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"value\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/": {
            "get": {
                "description": "List files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Retrieves a pagined list of files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of files per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.File"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload file for analysis.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Submit a new file for scanning",
                "parameters": [
                    {
                        "type": "file",
                        "description": "binary file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Request Entity Too Large",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/{sha256}": {
            "get": {
                "description": "Retrieves the content of a file report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get a file report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File SHA256",
                        "name": "sha256",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a file report with a new report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Update a file report (full update)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File SHA256",
                        "name": "sha256",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a file by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Deletes a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File SHA256",
                        "name": "sha256",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a portion of a file report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Update a file report (partial update)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File SHA256",
                        "name": "sha256",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "description": "Retrieves information about a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user information by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.File": {
            "type": "object",
            "properties": {
                "byte_entropy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "comments_count": {
                    "type": "integer"
                },
                "crc32": {
                    "type": "string"
                },
                "exif": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fileformat": {
                    "type": "string"
                },
                "first_seen": {
                    "type": "integer"
                },
                "histogram": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "last_scanned": {
                    "type": "integer"
                },
                "magic": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "ml": {
                    "type": "object",
                    "additionalProperties": true
                },
                "multiav": {
                    "type": "object",
                    "additionalProperties": true
                },
                "packer": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pe": {},
                "sha1": {
                    "type": "string"
                },
                "sha256": {
                    "type": "string"
                },
                "sha512": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "ssdeep": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "strings": {},
                "submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Submission"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": true
                },
                "trid": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.Submission": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "bio": {
                    "type": "string"
                },
                "comments_count": {
                    "type": "integer"
                },
                "confirmed": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "followers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "followers_count": {
                    "type": "integer"
                },
                "following": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "following_count": {
                    "type": "integer"
                },
                "has_avatar": {
                    "type": "boolean"
                },
                "last_seen": {
                    "type": "integer"
                },
                "likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "likes_count": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "member_since": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "submissions_count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "errors.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github.com_saferwall_saferwall-api_internal_auth.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8,
                    "example": "control123"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "example": "mike"
                }
            }
        },
        "github.com_saferwall_saferwall-api_internal_auth.resetPwdRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "internal_auth.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8,
                    "example": "control123"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "example": "mike"
                }
            }
        },
        "internal_auth.resetPwdRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        }
    }
}
